/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _STAT_H_RPCGEN
#define _STAT_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>

#define MAXDATALEN 200

struct data {
	struct {
		u_int data_len;
		int *data_val;
	} data;
};
typedef struct data data;
#ifdef __cplusplus
extern "C" bool_t xdr_data(XDR *, data*);
#elif __STDC__
extern  bool_t xdr_data(XDR *, data*);
#else /* Old Style C */
bool_t xdr_data();
#endif /* Old Style C */


struct average_1_argument {
	int *arr;
	int size;
};
typedef struct average_1_argument average_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_average_1_argument(XDR *, average_1_argument);
#elif __STDC__
extern  bool_t xdr_average_1_argument(XDR *, average_1_argument);
#else /* Old Style C */
bool_t xdr_average_1_argument();
#endif /* Old Style C */


struct minimum_1_argument {
	int *arr;
	int size;
};
typedef struct minimum_1_argument minimum_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_minimum_1_argument(XDR *, minimum_1_argument);
#elif __STDC__
extern  bool_t xdr_minimum_1_argument(XDR *, minimum_1_argument);
#else /* Old Style C */
bool_t xdr_minimum_1_argument();
#endif /* Old Style C */


struct max_1_argument {
	int *arr;
	int size;
};
typedef struct max_1_argument max_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_max_1_argument(XDR *, max_1_argument);
#elif __STDC__
extern  bool_t xdr_max_1_argument(XDR *, max_1_argument);
#else /* Old Style C */
bool_t xdr_max_1_argument();
#endif /* Old Style C */


struct stddev_1_argument {
	int *arr;
	int size;
};
typedef struct stddev_1_argument stddev_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_stddev_1_argument(XDR *, stddev_1_argument);
#elif __STDC__
extern  bool_t xdr_stddev_1_argument(XDR *, stddev_1_argument);
#else /* Old Style C */
bool_t xdr_stddev_1_argument();
#endif /* Old Style C */


struct variance_1_argument {
	int *arr;
	int size;
};
typedef struct variance_1_argument variance_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_variance_1_argument(XDR *, variance_1_argument);
#elif __STDC__
extern  bool_t xdr_variance_1_argument(XDR *, variance_1_argument);
#else /* Old Style C */
bool_t xdr_variance_1_argument();
#endif /* Old Style C */


#define STATISTICSPROG ((rpc_uint)99)
#define STATISTICSVERS ((rpc_uint)1)

#ifdef __cplusplus
#define AVERAGE ((rpc_uint)1)
extern "C" double * average_1(int , int , CLIENT *);
extern "C" double * average_1_svc(int , int , struct svc_req *);
#define MINIMUM ((rpc_uint)2)
extern "C" int * minimum_1(int , int , CLIENT *);
extern "C" int * minimum_1_svc(int , int , struct svc_req *);
#define MAX ((rpc_uint)3)
extern "C" int * max_1(int , int , CLIENT *);
extern "C" int * max_1_svc(int , int , struct svc_req *);
#define STDDEV ((rpc_uint)4)
extern "C" double * stddev_1(int , int , CLIENT *);
extern "C" double * stddev_1_svc(int , int , struct svc_req *);
#define VARIANCE ((rpc_uint)5)
extern "C" double * variance_1(int , int , CLIENT *);
extern "C" double * variance_1_svc(int , int , struct svc_req *);

#elif __STDC__
#define AVERAGE ((rpc_uint)1)
extern  double * average_1(int , int , CLIENT *);
extern  double * average_1_svc(int , int , struct svc_req *);
#define MINIMUM ((rpc_uint)2)
extern  int * minimum_1(int , int , CLIENT *);
extern  int * minimum_1_svc(int , int , struct svc_req *);
#define MAX ((rpc_uint)3)
extern  int * max_1(int , int , CLIENT *);
extern  int * max_1_svc(int , int , struct svc_req *);
#define STDDEV ((rpc_uint)4)
extern  double * stddev_1(int , int , CLIENT *);
extern  double * stddev_1_svc(int , int , struct svc_req *);
#define VARIANCE ((rpc_uint)5)
extern  double * variance_1(int , int , CLIENT *);
extern  double * variance_1_svc(int , int , struct svc_req *);

#else /* Old Style C */
#define AVERAGE ((rpc_uint)1)
extern  double * average_1();
extern  double * average_1_svc();
#define MINIMUM ((rpc_uint)2)
extern  int * minimum_1();
extern  int * minimum_1_svc();
#define MAX ((rpc_uint)3)
extern  int * max_1();
extern  int * max_1_svc();
#define STDDEV ((rpc_uint)4)
extern  double * stddev_1();
extern  double * stddev_1_svc();
#define VARIANCE ((rpc_uint)5)
extern  double * variance_1();
extern  double * variance_1_svc();
#endif /* Old Style C */

#endif /* !_STAT_H_RPCGEN */
